<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop - NicFix Premium Vapes</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(-45deg, #FF0000, #FF7F00, #FFFF00, #00FF00, #0000FF, #4B0082, #8B00FF);
            background-size: 400% 400%;
            animation: gradientBG 25s ease infinite;
            color: #e5e5e5; /* General light text color */
        }

        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .rainbow-button {
            color: white; font-weight: 600; 
            padding: 0.75rem 1.5rem; 
            border-radius: 0.6rem; 
            transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1); 
            box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06); 
            border: none;
            display: inline-block;
            text-align: center;
        }
        .rainbow-button:hover {
            transform: translateY(-3px) scale(1.02); 
            box-shadow: 0 10px 15px -3px rgba(0,0,0,0.15), 0 4px 6px -2px rgba(0,0,0,0.1); 
        }
        .rainbow-button:active {
            transform: translateY(-1px) scale(0.99); 
            box-shadow: 0 1px 3px 0 rgba(0,0,0,0.1), 0 1px 2px 0 rgba(0,0,0,0.06); 
        }

        .btn-red { background-color: #FF3B30; } .btn-red:hover { background-color: #E12D22; }
        .btn-orange { background-color: #FF9500; } .btn-orange:hover { background-color: #E18400; }
        .btn-yellow { background-color: #FFCC00; color: #1A202C; } .btn-yellow:hover { background-color: #E1B400; }
        .btn-green { background-color: #34C759; } .btn-green:hover { background-color: #2DAA4C; } 
        .btn-blue { background-color: #007AFF; } .btn-blue:hover { background-color: #0069E1; }
        .btn-indigo { background-color: #5856D6; } .btn-indigo:hover { background-color: #4D4BC4; }
        .btn-violet { background-color: #AF52DE; } .btn-violet:hover { background-color: #9A43C3; }

        .rainbow-text {
            background: linear-gradient(to right, #FF0000, #FF7F00, #FFFF00, #00FF00, #0000FF, #4B0082, #8B00FF);
            -webkit-background-clip: text; background-clip: text; color: transparent;
            animation: rainbowTextAnimation 10s linear infinite;
            background-size: 200% 200%;
        }

        @keyframes rainbowTextAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .nav-link {
            text-decoration: none; color: #e5e5e5;
            padding-bottom: 0.4rem; 
            transition: color 0.25s ease-in-out, border-color 0.25s ease-in-out;
            border-bottom: 3px solid transparent; 
        }
        .nav-link.active-main-nav { 
            color: #FF9500; 
            border-bottom-color: #FF9500;
        }
        .nav-link:not(.active-main-nav):hover {
            border-bottom-width: 3px; 
        }
        
        .content-card { 
            background-color: rgba(10, 10, 20, 0.9); 
            backdrop-filter: blur(14px); 
            border-radius: 1rem; 
            padding: 1.5rem; 
            box-shadow: 0 15px 30px -10px rgba(0,0,0,0.6); 
            border: 1px solid rgba(255, 255, 255, 0.08); 
        }
         @media (min-width: 640px) {
            .content-card {
                padding: 2rem; 
            }
        }

        .header-card { 
             background-color: rgba(0,0,0,0.88); 
             backdrop-filter: blur(16px); 
             border-bottom: 1px solid rgba(255,255,255,0.07); 
        }

        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px -15px rgba(0,0,0,0.7);
        }
        .product-image-container {
            background-color: rgba(255,255,255,0.05); 
            aspect-ratio: 1 / 1; 
        }
        /* Cart modal styles */
        .cart-modal-item {
            border-bottom: 1px solid #374151; /* slate-700 */
        }
        .cart-modal-item:last-child {
            border-bottom: none;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col">

    <header class="header-card shadow-lg sticky top-0 z-50">
        <div class="container mx-auto px-4 sm:px-6 py-4 flex justify-between items-center">
            <div class="flex items-center space-x-3 sm:space-x-4">
                <a href="index.html"> 
                    <img src="NixFix.jpg" alt="NicFix Logo" class="h-10 sm:h-12 md:h-14 w-auto rounded-md" onerror="this.outerHTML = `<div class='h-10 sm:h-12 md:h-14 w-28 flex-shrink-0 items-center justify-center border-2 border-dashed border-gray-500 rounded-md bg-gray-700/70 text-gray-300 text-xs p-2 text-center leading-tight shadow-inner'>Logo Not Found:<br>NicFix.jpg</div>`; console.error('Logo not found: NicFix.jpg. Please ensure the image file is in the correct path.');">
                </a>
                <a href="index.html" class="text-2xl sm:text-3xl md:text-4xl font-extrabold rainbow-text">NicFix</a>
            </div>
            <nav>
                <ul class="flex space-x-4 sm:space-x-8 items-center">
                    <li><a href="index.html" class="nav-link text-base sm:text-lg font-semibold hover:text-pink-400 hover:border-pink-400">Home</a></li>
                    <li><a href="Shop.html" class="nav-link text-base sm:text-lg font-semibold active-main-nav">Shop</a></li> 
                    <li><a href="Social.html" class="nav-link text-base sm:text-lg font-semibold hover:text-yellow-300 hover:border-yellow-300">Social</a></li>
                    <li>
                        <a href="#" id="cartLink" class="relative text-gray-300 hover:text-white transition-colors" title="Shopping Cart">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-7 sm:w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                            </svg>
                            <span id="cartItemCount" class="absolute -top-2 -right-2 text-xs bg-red-500 text-white rounded-full px-1.5 py-0.5 min-w-[20px] text-center">0</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </header>

    <main class="container mx-auto px-4 sm:px-6 py-12 md:py-16 lg:py-20 flex-grow">
        <div class="text-center mb-12 md:mb-16">
            <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-green-400 via-blue-400 to-purple-500">Explore Our Collection</h1>
            <p class="text-lg sm:text-xl text-gray-200 mt-4 max-w-2xl mx-auto">Find your perfect flavor and device. Quality vapes, delivered fast.</p>
        </div>

        <div class="mb-10 p-4 content-card rounded-lg">
            <div class="flex flex-col sm:flex-row justify-between items-center gap-4">
                <h2 class="text-2xl font-semibold text-gray-100">Filter Products</h2>
                <div class="flex items-center space-x-4">
                    <select class="bg-slate-700 text-gray-200 border border-slate-600 rounded-md p-2 focus:ring-indigo-500 focus:border-indigo-500">
                        <option>Sort by: Featured</option>
                        <option>Sort by: Price Low to High</option>
                        <option>Sort by: Price High to Low</option>
                        <option>Sort by: Newest</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 md:gap-8">
            <div class="content-card product-card flex flex-col justify-between">
                <div>
                    <div class="product-image-container rounded-lg overflow-hidden mb-4">
                        <img src="https://vaporesso24.ru/wp-content/uploads/2024/05/XROS4MINI-black.png" alt="Cosmic Cool 8000" class="w-full h-full object-cover" onerror="this.src='https://placehold.co/400x400/334155/e2e8f0?text=Image+Not+Found'; this.alt='Image not available';">
                      </div>
                    <h3 class="text-lg sm:text-xl font-semibold text-gray-50 mb-1">VAPORESSO XROS 4 MINI</h3>
                    <p class="text-sm text-purple-300 mb-1">Refillable Pod System</p>
                    <p class="text-xs text-gray-400 mb-3">3ml Pod Capacity</p>
                </div>
                <div class="mt-auto">
                    <p class="text-2xl font-bold rainbow-text mb-4">R440.00</p>
                    <button class="add-to-cart-btn rainbow-button btn-indigo w-full" data-product-name="Cosmic Cool 8K" data-price="280.00">Add to Cart</button>
                </div>
            </div>

            <div class="content-card product-card flex flex-col justify-between">
                <div>
                    <div class="product-image-container rounded-lg overflow-hidden mb-4">
                        <img src="https://bhikaimports.co.za/wp-content/uploads/2024/04/Apple-Smoothies.png" alt="Minty Breeze 5000" class="w-full h-full object-cover" onerror="this.src='https://placehold.co/400x400/334155/e2e8f0?text=Image+Not+Found'; this.alt='Image not available';">
                    </div>
                    <h3 class="text-xl font-semibold text-gray-50 mb-1">
Solobar Rechargeable Bar S10000</h3>
                    <p class="text-sm text-green-300 mb-1">Flavor: Apple Smoothies</p>
                    <p class="text-xs text-gray-400 mb-3">10000 Puffs</p>
                </div>
                <div class="mt-auto">
                    <p class="text-2xl font-bold rainbow-text mb-4">R180.00</p>
                    <button class="add-to-cart-btn rainbow-button btn-green w-full" data-product-name="Minty Breeze 5K" data-price="220.00">Add to Cart</button>
                </div>
            </div>

            <div class="content-card product-card flex flex-col justify-between">
                <div>
                    <div class="product-image-container rounded-lg overflow-hidden mb-4">
                        <img src="https://bhikaimports.co.za/wp-content/uploads/2024/04/Lady-Killer.png" alt="Tropical Twist X" class="w-full h-full object-cover" onerror="this.src='https://placehold.co/400x400/334155/e2e8f0?text=Image+Not+Found'; this.alt='Image not available';">
                    </div>
                    <h3 class="text-xl font-semibold text-gray-50 mb-1">Solobar Rechargeable Bar S10000</h3>
                    <p class="text-sm text-yellow-300 mb-1">Flavor: Lady Killer</p>
                    <p class="text-xs text-gray-400 mb-3">10000 Puffs</p>
                </div>
                <div class="mt-auto">
                    <p class="text-2xl font-bold rainbow-text mb-4">R180.00</p>
                    <button class="add-to-cart-btn rainbow-button btn-yellow w-full" data-product-name="Tropical Twist X" data-price="250.00">Add to Cart</button>
                </div>
            </div>
            
            <div class="content-card product-card flex flex-col justify-between">
                <div>
                    <div class="product-image-container rounded-lg overflow-hidden mb-4">
                        <img src="https://bhikaimports.co.za/wp-content/uploads/2024/04/Strawberry-Watermelon-Freeze.png" alt="Ruby Rush Max" class="w-full h-full object-cover" onerror="this.src='https://placehold.co/400x400/334155/e2e8f0?text=Image+Not+Found'; this.alt='Image not available';">
                    </div>
                    <h3 class="text-xl font-semibold text-gray-50 mb-1">Solobar Rechargeable Bar S10000</h3>
                    <p class="text-sm text-red-300 mb-1">Flavor: Watermelon Strawberry Freeze </p>
                    <p class="text-xs text-gray-400 mb-3">10000 Puffs</p>
                </div>
                <div class="mt-auto">
                    <p class="text-2xl font-bold rainbow-text mb-4">R180.00</p>
                    <button class="add-to-cart-btn rainbow-button btn-red w-full" data-product-name="Ruby Rush Max" data-price="300.00">Add to Cart</button>
                </div>
            </div>

             <div class="content-card product-card flex flex-col justify-between">
                <div>
                    <div class="product-image-container rounded-lg overflow-hidden mb-4">
                        <img src="https://bhikaimports.co.za/wp-content/uploads/2024/04/Blue-Cherry-Dragon-Fruit.png" alt="Azure Blast 7K" class="w-full h-full object-cover" onerror="this.src='https://placehold.co/400x400/334155/e2e8f0?text=Image+Not+Found'; this.alt='Image not available';">
                    </div>
                    <h3 class="text-xl font-semibold text-gray-50 mb-1">Solobar Rechargeable Bar S10000</h3>
                    <p class="text-sm text-blue-300 mb-1">Flavor: Blue Cherry Dragon Fruit</p>
                    <p class="text-xs text-gray-400 mb-3">10000 Puffs</p>
                </div>
                <div class="mt-auto">
                    <p class="text-2xl font-bold rainbow-text mb-4">R180.00</p>
                    <button class="add-to-cart-btn rainbow-button btn-blue w-full" data-product-name="Azure Blast 7K" data-price="260.00">Add to Cart</button>
                </div>
            </div>

            <div class="content-card product-card flex flex-col justify-between">
                <div>
                    <div class="product-image-container rounded-lg overflow-hidden mb-4">
                        <img src="https://bhikaimports.co.za/wp-content/uploads/2024/04/Cherry-Sparkling-Juice.png" alt="Pink Dream Pod" class="w-full h-full object-cover" onerror="this.src='https://placehold.co/400x400/334155/e2e8f0?text=Image+Not+Found'; this.alt='Image not available';">
                    </div>
                    <h3 class="text-xl font-semibold text-gray-50 mb-1">Solobar Rechargeable Bar S10000</h3>
                    <p class="text-sm text-pink-300 mb-1">Flavor: Cotton Candy Bliss</p>
                    <p class="text-xs text-gray-400 mb-3">10000 Puffs</p>
                </div>
                <div class="mt-auto">
                    <p class="text-2xl font-bold rainbow-text mb-4">R180.00</p>
                    <button class="add-to-cart-btn rainbow-button w-full" style="background-color: #ec4899;" data-product-name="Pink Dream Pod" data-price="180.00">Add to Cart</button>
                </div>
            </div>
        </div>
		
    </main>

    <footer class="bg-black/90 py-10 text-center border-t border-gray-700/50 mt-auto"> 
        <p class="text-gray-200 text-lg">&copy; <span id="currentYear"></span> <span class="font-bold rainbow-text">NicFix</span>. All rights reserved.</p>
        <p class="text-sm text-gray-400 mt-3 px-4">Based in Springs, Gauteng, South Africa. Responsible vaping is advised. Products are for adult use only (18+).</p>
    </footer>

    <div id="cartModal" class="fixed inset-0 bg-black bg-opacity-80 backdrop-blur-sm flex items-center justify-center z-[1000] hidden p-4">
        <div class="bg-slate-800 p-5 sm:p-6 rounded-xl shadow-2xl w-full max-w-md md:max-w-lg max-h-[90vh] flex flex-col border border-slate-700">
            <div class="flex justify-between items-center mb-4 pb-3 border-b border-slate-700">
                <h2 class="text-2xl sm:text-3xl font-semibold text-white">Your Cart</h2>
                <button id="closeCartModalBtn" class="text-gray-400 hover:text-white transition-colors text-3xl leading-none">&times;</button>
            </div>
            <div id="cartModalBody" class="flex-grow overflow-y-auto mb-4 pr-2">
                <p id="emptyCartMessage" class="text-gray-400 text-center py-8">Your cart is empty.</p>
            </div>
            <div class="border-t border-slate-700 pt-4">
                <div class="flex justify-between items-center mb-4">
                    <p class="text-lg sm:text-xl text-white font-semibold">Total:</p>
                    <p id="cartTotal" class="text-lg sm:text-xl text-white font-semibold">R0.00</p>
                </div>
                <button id="checkoutBtn" class="w-full rainbow-button btn-green text-base sm:text-lg">Proceed to Checkout</button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Initialize cart from session storage or as an empty array
            let cart = JSON.parse(sessionStorage.getItem('nicfixCart')) || [];

            const cartLink = document.getElementById('cartLink');
            const cartModal = document.getElementById('cartModal');
            const closeCartModalBtn = document.getElementById('closeCartModalBtn');
            const cartModalBody = document.getElementById('cartModalBody');
            const cartTotalElement = document.getElementById('cartTotal');
            const cartItemCountElement = document.getElementById('cartItemCount');
            const checkoutBtn = document.getElementById('checkoutBtn');
            const emptyCartMessage = document.getElementById('emptyCartMessage');

            // Function to update cart display (count and modal)
            function updateCartDisplay() {
                // Update item count in header
                cartItemCountElement.textContent = cart.reduce((sum, item) => sum + item.quantity, 0);

                // Clear previous items in modal
                cartModalBody.innerHTML = ''; 
                
                let total = 0;

                if (cart.length === 0) {
                    cartModalBody.appendChild(emptyCartMessage); 
                    emptyCartMessage.style.display = 'block';
                } else {
                    emptyCartMessage.style.display = 'none';
                    cart.forEach((item, index) => {
                        const itemElement = document.createElement('div');
                        itemElement.classList.add('cart-modal-item', 'py-3', 'flex', 'justify-between', 'items-center', 'gap-2');
                        itemElement.innerHTML = `
                            <div class="flex-grow">
                                <p class="text-white text-sm sm:text-base font-medium">${item.name}</p>
                                <p class="text-purple-300 text-xs sm:text-sm">R${item.price.toFixed(2)} x ${item.quantity}</p>
                            </div>
                            <p class="text-gray-200 text-sm sm:text-base font-semibold">R${(item.price * item.quantity).toFixed(2)}</p>
                            <button class="remove-from-cart-btn text-red-400 hover:text-red-600 text-xs sm:text-sm py-1 px-2 rounded" data-index="${index}">&times; Remove</button>
                        `;
                        cartModalBody.appendChild(itemElement);
                        total += item.price * item.quantity;
                    });
                }
                
                cartTotalElement.textContent = `R${total.toFixed(2)}`;
                sessionStorage.setItem('nicfixCart', JSON.stringify(cart)); // Save cart to session storage
            }
            
            // Initial cart display update
            updateCartDisplay();

            // Add to cart button functionality
            const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
            addToCartButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const productName = button.getAttribute('data-product-name');
                    const productPrice = parseFloat(button.getAttribute('data-price'));

                    // Check if item already in cart
                    const existingItem = cart.find(item => item.name === productName);
                    if (existingItem) {
                        existingItem.quantity += 1;
                    } else {
                        cart.push({ name: productName, price: productPrice, quantity: 1 });
                    }
                    
                    updateCartDisplay();

                    const originalText = button.textContent;
                    const originalClasses = Array.from(button.classList);
                    button.textContent = 'Added!';
                    button.classList.remove('btn-indigo', 'btn-green', 'btn-yellow', 'btn-red', 'btn-blue'); // remove specific color
                    button.style.backgroundColor = ''; // clear inline style for pink button
                    button.classList.add('btn-green'); 
                    setTimeout(() => {
                        button.textContent = originalText;
                        button.classList.remove('btn-green');
                        originalClasses.forEach(cls => { // re-add original classes
                            if(cls.startsWith('btn-') || cls === 'rainbow-button' || cls === 'w-full' || cls === 'add-to-cart-btn') {
                                button.classList.add(cls);
                            }
                        });
                         if (originalClasses.some(c => c === 'add-to-cart-btn' && button.style.backgroundColor)) { // for pink button
                            // do nothing, style is inline
                         }

                    }, 1500);
                });
            });

            // Remove from cart functionality (delegated event listener)
            cartModalBody.addEventListener('click', (event) => {
                if (event.target.classList.contains('remove-from-cart-btn')) {
                    const itemIndex = parseInt(event.target.getAttribute('data-index'));
                    cart.splice(itemIndex, 1); // Remove item from cart array
                    updateCartDisplay(); // Re-render the cart modal
                }
            });

            // Show/Hide Cart Modal
            if (cartLink) {
                cartLink.addEventListener('click', (e) => {
                    e.preventDefault();
                    updateCartDisplay(); // Ensure modal is up-to-date
                    cartModal.classList.remove('hidden');
                    cartModal.classList.add('flex');
                });
            }
            if (closeCartModalBtn) {
                closeCartModalBtn.addEventListener('click', () => {
                    cartModal.classList.add('hidden');
                    cartModal.classList.remove('flex');
                });
            }
            // Close modal if clicking outside of it
            cartModal.addEventListener('click', (event) => {
                if (event.target === cartModal) {
                    cartModal.classList.add('hidden');
                    cartModal.classList.remove('flex');
                }
            });


            // Checkout functionality
            if (checkoutBtn) {
                checkoutBtn.addEventListener('click', () => {
                    if (cart.length === 0) {
                        // Using a custom styled message instead of alert
                        const tempMsg = document.createElement('p');
                        tempMsg.textContent = 'Your cart is empty. Add some items first!';
                        tempMsg.className = 'text-yellow-400 text-center text-sm my-2';
                        cartModalBody.insertBefore(tempMsg, cartModalBody.firstChild);
                        setTimeout(() => tempMsg.remove(), 3000);
                        return;
                    }

                    let emailBody = "Hello NicFix,\n\nI would like to order the following items:\n\n";
                    let totalAmount = 0;
                    cart.forEach(item => {
                        emailBody += `- ${item.name} (x${item.quantity}) - R${(item.price * item.quantity).toFixed(2)}\n`;
                        totalAmount += item.price * item.quantity;
                    });
                    emailBody += `\nTotal: R${totalAmount.toFixed(2)}`;
                    emailBody += "\n\nPlease let me know the next steps for payment and delivery.";
                    emailBody += "\n\nThanks!";

                    const mailtoLink = `mailto:nalydnetsrak@gmail.com?subject=${encodeURIComponent('NicFix Order')}&body=${encodeURIComponent(emailBody)}`;
                    
                    window.location.href = mailtoLink;

                    // Clear cart after attempting checkout
                    cart = [];
                    updateCartDisplay();
                    sessionStorage.removeItem('nicfixCart');
                    
                    // Optionally close modal after checkout
                    setTimeout(() => { // Timeout to allow mailto link to process
                        cartModal.classList.add('hidden');
                        cartModal.classList.remove('flex');
                    }, 500);
                });
            }

            // Set current year in footer
            document.getElementById('currentYear').textContent = new Date().getFullYear();
        });
    </script>

</body>
</html>
